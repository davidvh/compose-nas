services:
  duckdns:
    image: lscr.io/linuxserver/duckdns:latest
    container_name: duckdns
    environment:
      - SUBDOMAINS=${SUBDOMAIN}
      - TOKEN=${DUCKDNS_TOKEN}
    restart: unless-stopped

  caddy-public:
    build:
      context: ./caddy
      dockerfile: Dockerfile
    container_name: caddy-public
    volumes:
      - caddy-data:/data
      - certs:/data/caddy/certificates
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
    ports:
      - 443:443
      - 80:80
    restart: unless-stopped

  caddy-internal:
    build:
      context: ./caddy
      dockerfile: Dockerfile
    container_name: caddy-internal
    volumes:
      - caddy-internal-data:/data
      - certs:/data/caddy/certificates
      - ./caddy/InternalCaddyfile:/etc/caddy/Caddyfile
    ports:
      - 8443:443
      - 8080:80
    restart: unless-stopped

  blocky:
    image: spx01/blocky
    container_name: blocky
    volumes:
      - ./blocky/config.yaml:/app/config.yml
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 4000:4000/tcp # Metrics
    restart: unless-stopped

  authelia:
    image: authelia/authelia:latest
    container_name: authelia
    volumes:
      - ./authelia/configuration.yml:/config/configuration.yml
      - certs:/config/certificates
      - auth_db:/db
    networks:
      - default
      - auth
    depends_on:
      - lldap
    restart: unless-stopped

  lldap:
    image: nitnelave/lldap:stable
    container_name: lldap
    ports:
      # For LDAP
      - "389:3890"
      # For LDAPS (LDAP Over SSL), enable port if LLDAP_LDAPS_OPTIONS__ENABLED set true, look env below
      #- "636:6360"
    networks:
      - default
      - auth
    volumes:
      - "lldap_data:/data"
      - certs:/certs
    environment:
      - LLDAP_JWT_SECRET=${LLDAP_JWT_SECRET}
      - LLDAP_LDAP_USER_PASS=${LLDAP_USERPASS}
      - LLDAP_LDAP_BASE_DN=dc=${SUBDOMAIN},dc=com
    restart: unless-stopped

  mail:
    image: ghcr.io/docker-mailserver/docker-mailserver:latest
    container_name: mail
    # Provide the FQDN of your mail server here (Your DNS MX record should point to this value)
    hostname: mail.${HOSTNAME}
    ports:
      - "587:587" #SMTPS
      - "465:465" #SMTPS OLD
      - "993:993" #IMAPS
    volumes:
      - mail:/var/mail/
      - mailstate:/var/mail-state/
      - maillogs:/var/log/mail/
      - maildms:/tmp/docker-mailserver/
      - mailcerts:/etc/certs/
      - /etc/localtime:/etc/localtime:ro
    environment:
      - SSL_TYPE=manual
      - SSL_CERT_PATH=/etc/certs/fullchain.pem
      - SSL_KEY_PATH=/etc/certs/privkey.pem
      - ACCOUNT_PROVISIONER=LDAP
      - LDAP_SERVER_HOST=ldap://lldap:3890
      - LDAP_SEARCH_BASE=ou=people,dc=${SUBDOMAIN},dc=com
      - LDAP_BIND_DN=cn=admin,dc=${SUBDOMAIN},dc=com
      - LDAP_BIND_PW=${LLDAP_USERPASS}
      - LDAP_QUERY_FILTER_USER=(mail=%s)
      - LDAP_QUERY_FILTER_GROUP=(mailGroupMember=%s)
      - LDAP_QUERY_FILTER_ALIAS=(&(mail=%s@*)(objectClass=person))
      - LDAP_QUERY_FILTER_DOMAIN=(&(mail=*@%s)(objectClass=person))
      - DOVECOT_PASS_FILTER=(&(objectClass=person)(uid=%n))
      - DOVECOT_USER_FILTER=(&(objectClass=person)(uid=%n))
      - ENABLE_SASLAUTHD=1
      - SASLAUTHD_MECHANISMS=ldap
      - SASLAUTHD_LDAP_SERVER=ldap://lldap:3890
      - SASLAUTHD_LDAP_BIND_DN=cn=admin,dc=${SUBDOMAIN},dc=com
      - SASLAUTHD_LDAP_PASSWORD=${LLDAP_USERPASS}
      - SASLAUTHD_LDAP_SEARCH_BASE=ou=people,dc=${SUBDOMAIN},dc=com
      - SASLAUTHD_LDAP_FILTER=(&(objectClass=person)(uid=%U))
      - POSTMASTER_ADDRESS=postmaster@mail.${HOSTNAME}
    restart: always
  mail-cert-copy:
    image: alpine
    command: /bin/sh /copy_certs.sh
    environment:
      - URI=mail.${HOSTNAME}
      - OUTDIR=/mail
    volumes:
      - mailcerts:/mail
      - certs:/certs
      - ./caddy_to_letsencrypt.sh:/copy_certs.sh
    restart: unless-stopped

  whoami:
    image: "traefik/whoami"
    container_name: "whoami"

  dashy:
    image: lissy93/dashy
    container_name: dashy
    volumes:
      - ./dashy/config.yml:/app/public/conf.yml
    environment:
      - UID=1000
      - GID=1000
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'node', '/app/services/healthcheck']
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  default:
    name: compose-nas
    ipam:
      config:
        - subnet: 172.1.0.0/16
  auth:
    name: auth

volumes:
  caddy-data:
  caddy-internal-data:
  certs:
  auth_db:
  lldap_data:
  mail:
  mailstate:
  maillogs:
  maildms:
  mailcerts:
