version: '3.4'
# See https://goauthentik.io/docs/installation/docker-compose
services:
  postgresql:
    image: docker.io/library/postgres:12-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - /export/fast/authentik_database:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${AUTHENTIK_PG_PASS:?database password required}
      - POSTGRES_USER=${AUTHENTIK_PG_USER:-authentik}
      - POSTGRES_DB=${AUTHENTIK_PG_DB:-authentik}
  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis:/data
  server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2023.2.2}
    container_name: authentik-server
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${AUTHENTIK_PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${AUTHENTIK_PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_PG_PASS}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    networks:
      - default
      - nas
    volumes:
      - media:/media
      - custom-templates:/templates
  worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2023.2.2}
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${AUTHENTIK_PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${AUTHENTIK_PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_PG_PASS}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - media:/media
      - certs:/certs
      - custom-templates:/templates

networks:
  default:
    name: authentik
  nas:
    name: compose-nas
    external: true

volumes:
  redis:
    driver_opts:
      type: cifs
      o: "username=${SMB_USER},password=${SMB_PASS},addr=${SMB_SRV},noperm"
      device: "//${SMB_SRV}/fast/authentik_redis"
  media:
    driver_opts:
      type: cifs
      o: "username=${SMB_USER},password=${SMB_PASS},addr=${SMB_SRV},noperm"
      device: "//${SMB_SRV}/fast/authentik_media"
  certs:
    driver_opts:
      type: cifs
      o: "username=${SMB_USER},password=${SMB_PASS},addr=${SMB_SRV},noperm"
      device: "//${SMB_SRV}/fast/authentik_certs"
  custom-templates:
    driver_opts:
      type: cifs
      o: "username=${SMB_USER},password=${SMB_PASS},addr=${SMB_SRV},noperm"
      device: "//${SMB_SRV}/fast/authentik_templates"
